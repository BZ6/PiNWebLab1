{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#github","title":"GitHub","text":"<ul> <li>Repository</li> <li>Practice 1</li> <li>Practice 2</li> <li>Practice 3</li> </ul>"},{"location":"auth/","title":"Authentication Module","text":"<p>This module provides functions for password hashing, token creation, and token decoding.</p>"},{"location":"auth/#functions","title":"Functions","text":""},{"location":"auth/#get_password_hash","title":"<code>get_password_hash</code>","text":"<p>Hashes a plaintext password using bcrypt.</p> <ul> <li>Parameters:</li> <li><code>password</code> (str): The plaintext password to hash.</li> <li>Returns:</li> <li><code>str</code>: The hashed password.</li> </ul>"},{"location":"auth/#verify_password","title":"<code>verify_password</code>","text":"<p>Verifies a plaintext password against a hashed password.</p> <ul> <li>Parameters:</li> <li><code>plain_password</code> (str): The plaintext password to verify.</li> <li><code>hashed_password</code> (str): The hashed password to verify against.</li> <li>Returns:</li> <li><code>bool</code>: <code>True</code> if the passwords match, <code>False</code> otherwise.</li> </ul>"},{"location":"auth/#create_access_token","title":"<code>create_access_token</code>","text":"<p>Creates a JWT access token.</p> <ul> <li>Parameters:</li> <li><code>data</code> (str): The data to include in the token payload.</li> <li><code>expiry</code> (timedelta, optional): The token expiry time. Defaults to 60 minutes.</li> <li><code>refresh</code> (bool, optional): Whether the token is a refresh token. Defaults to <code>False</code>.</li> <li>Returns:</li> <li><code>str</code>: The encoded JWT token.</li> </ul>"},{"location":"auth/#decode_token","title":"<code>decode_token</code>","text":"<p>Decodes a JWT token and returns its payload.</p> <ul> <li>Parameters:</li> <li><code>token</code> (str): The JWT token to decode.</li> <li>Returns:</li> <li><code>dict</code>: The token payload.</li> <li>Raises:</li> <li><code>HTTPException</code>: If the token is expired, invalid, or not yet valid.</li> </ul>"},{"location":"auth/#dependencies","title":"Dependencies","text":"<p>The <code>dependencies.py</code> file provides classes for token validation and verification.</p>"},{"location":"auth/#tokenbearer","title":"<code>TokenBearer</code>","text":"<p>A base class for token validation.</p> <ul> <li>Methods:</li> <li><code>__call__</code>: Validates the token from the request header.</li> <li><code>token_valid</code>: Checks if the token is valid.</li> <li><code>verify_token_data</code>: Abstract method to be overridden in child classes.</li> </ul>"},{"location":"auth/#accesstokenbearer","title":"<code>AccessTokenBearer</code>","text":"<p>A class for access token validation.</p> <ul> <li>Methods:</li> <li><code>verify_token_data</code>: Verifies the token data.</li> </ul>"},{"location":"models/","title":"Database Models","text":""},{"location":"models/#scheduletaskdefault","title":"ScheduleTaskDefault","text":"<ul> <li><code>schedule_id</code>: Foreign key to Schedule</li> <li><code>task_id</code>: Foreign key to Task</li> </ul>"},{"location":"models/#userdefault","title":"UserDefault","text":"<ul> <li><code>first_name</code>: String</li> <li><code>last_name</code>: String</li> <li><code>username</code>: String</li> <li><code>email</code>: String</li> </ul>"},{"location":"models/#prioritydefault","title":"PriorityDefault","text":"<ul> <li><code>name</code>: String</li> </ul>"},{"location":"models/#taskdefault","title":"TaskDefault","text":"<ul> <li><code>description</code>: String</li> <li><code>deadline</code>: DateTime</li> <li><code>priority_id</code>: Foreign key to Priority</li> <li><code>user_id</code>: Foreign key to User</li> </ul>"},{"location":"models/#timeentrydefault","title":"TimeEntryDefault","text":"<ul> <li><code>task_id</code>: Foreign key to Task</li> <li><code>start_time</code>: DateTime</li> <li><code>end_time</code>: DateTime</li> <li><code>duration</code>: Integer</li> </ul>"},{"location":"models/#scheduledefault","title":"ScheduleDefault","text":"<ul> <li><code>user_id</code>: Foreign key to User</li> <li><code>date</code>: DateTime</li> </ul>"},{"location":"models/#notificationdefault","title":"NotificationDefault","text":"<ul> <li><code>task_id</code>: Foreign key to Task</li> <li><code>message</code>: String</li> <li><code>sent_at</code>: DateTime</li> </ul>"},{"location":"models/#user","title":"User","text":"<ul> <li><code>id</code>: Primary key</li> <li><code>first_name</code>: String</li> <li><code>last_name</code>: String</li> <li><code>username</code>: String</li> <li><code>password_hash</code>: String</li> <li><code>email</code>: String</li> <li><code>tasks</code>: Relationship with Task</li> <li><code>schedules</code>: Relationship with Schedule</li> </ul>"},{"location":"models/#userinner","title":"UserInner","text":"<ul> <li><code>username</code>: String</li> <li><code>email</code>: String</li> <li><code>tasks</code>: List of Task</li> <li><code>schedules</code>: List of Schedule</li> </ul>"},{"location":"models/#usercreate","title":"UserCreate","text":"<ul> <li><code>first_name</code>: String</li> <li><code>last_name</code>: String</li> <li><code>username</code>: String</li> <li><code>email</code>: String</li> <li><code>password</code>: String</li> </ul>"},{"location":"models/#userlogin","title":"UserLogin","text":"<ul> <li><code>username</code>: String</li> <li><code>password</code>: String</li> </ul>"},{"location":"models/#userjwtresponse","title":"UserJWTResponse","text":"<ul> <li><code>first_name</code>: String</li> <li><code>last_name</code>: String</li> <li><code>username</code>: String</li> <li><code>email</code>: String</li> <li><code>password</code>: String</li> <li><code>access_token</code>: String</li> </ul>"},{"location":"models/#userresponse","title":"UserResponse","text":"<ul> <li><code>first_name</code>: String</li> <li><code>last_name</code>: String</li> <li><code>username</code>: String</li> <li><code>email</code>: String</li> </ul>"},{"location":"models/#priority","title":"Priority","text":"<ul> <li><code>id</code>: Primary key</li> <li><code>name</code>: String</li> <li><code>tasks</code>: Relationship with Task</li> </ul>"},{"location":"models/#priorityinner","title":"PriorityInner","text":"<ul> <li><code>name</code>: String</li> <li><code>tasks</code>: List of Task</li> </ul>"},{"location":"models/#task","title":"Task","text":"<ul> <li><code>id</code>: Primary key</li> <li><code>description</code>: String</li> <li><code>deadline</code>: DateTime</li> <li><code>priority_id</code>: Foreign key to Priority</li> <li><code>user_id</code>: Foreign key to User</li> <li><code>priority</code>: Relationship with Priority</li> <li><code>user</code>: Relationship with User</li> <li><code>time_entries</code>: Relationship with TimeEntry</li> <li><code>notifications</code>: Relationship with Notification</li> <li><code>schedules</code>: Relationship with Schedule through ScheduleTask</li> </ul>"},{"location":"models/#taskinner","title":"TaskInner","text":"<ul> <li><code>description</code>: String</li> <li><code>deadline</code>: DateTime</li> <li><code>priority_id</code>: Foreign key to Priority</li> <li><code>user_id</code>: Foreign key to User</li> <li><code>priority</code>: Priority</li> <li><code>user</code>: List of User</li> <li><code>time_entries</code>: List of TimeEntry</li> <li><code>notifications</code>: List of Notification</li> <li><code>schedules</code>: List of Schedule</li> </ul>"},{"location":"models/#timeentry","title":"TimeEntry","text":"<ul> <li><code>id</code>: Primary key</li> <li><code>task_id</code>: Foreign key to Task</li> <li><code>start_time</code>: DateTime</li> <li><code>end_time</code>: DateTime</li> <li><code>duration</code>: Integer</li> <li><code>task</code>: Relationship with Task</li> </ul>"},{"location":"models/#timeentryinner","title":"TimeEntryInner","text":"<ul> <li><code>task_id</code>: Foreign key to Task</li> <li><code>start_time</code>: DateTime</li> <li><code>end_time</code>: DateTime</li> <li><code>duration</code>: Integer</li> <li><code>task</code>: Task</li> </ul>"},{"location":"models/#schedule","title":"Schedule","text":"<ul> <li><code>id</code>: Primary key</li> <li><code>user_id</code>: Foreign key to User</li> <li><code>date</code>: DateTime</li> <li><code>user</code>: Relationship with User</li> <li><code>tasks</code>: Relationship with Task through ScheduleTask</li> </ul>"},{"location":"models/#scheduleinner","title":"ScheduleInner","text":"<ul> <li><code>user_id</code>: Foreign key to User</li> <li><code>date</code>: DateTime</li> <li><code>user</code>: User</li> <li><code>tasks</code>: List of Task</li> </ul>"},{"location":"models/#notification","title":"Notification","text":"<ul> <li><code>id</code>: Primary key</li> <li><code>task_id</code>: Foreign key to Task</li> <li><code>message</code>: String</li> <li><code>sent_at</code>: DateTime</li> <li><code>task</code>: Relationship with Task</li> </ul>"},{"location":"models/#notificationinner","title":"NotificationInner","text":"<ul> <li><code>task_id</code>: Foreign key to Task</li> <li><code>message</code>: String</li> <li><code>sent_at</code>: DateTime</li> <li><code>task</code>: Task</li> </ul>"},{"location":"models/#scheduletask","title":"ScheduleTask","text":"<ul> <li><code>schedule_id</code>: Foreign key to Schedule</li> <li><code>task_id</code>: Foreign key to Task</li> <li><code>added_at</code>: DateTime</li> </ul>"},{"location":"tests/","title":"Tests Documentation","text":"<p>This document provides an overview of the test cases for the application. Each test case is designed to verify the functionality of various endpoints and ensure that the application behaves as expected.</p>"},{"location":"tests/#test-files","title":"Test Files","text":""},{"location":"tests/#conftestpy","title":"<code>conftest.py</code>","text":"<p>This file contains fixtures and configurations for the test environment.</p> <ul> <li>pytest_sessionstart: Hook to check database connectivity before running tests.</li> <li>test_db_engine: Fixture to create and drop the test database schema.</li> <li>test_db_session: Fixture to provide a database session for each test.</li> <li>test_client: Fixture to provide a test client for making HTTP requests.</li> </ul>"},{"location":"tests/#test_taskpy","title":"<code>test_task.py</code>","text":"<p>This file contains tests for the task-related endpoints.</p> <ul> <li>test_create_task: Tests the creation of a new task.</li> <li>test_get_tasks: Tests retrieving all tasks.</li> <li>test_get_task: Tests retrieving a single task by ID.</li> <li>test_update_task: Tests updating an existing task.</li> <li>test_delete_task: Tests deleting a task.</li> </ul>"},{"location":"tests/#test_schedule_taskpy","title":"<code>test_schedule_task.py</code>","text":"<p>This file contains tests for the schedule task-related endpoints.</p> <ul> <li>test_create_schedule_task: Tests the creation of a new schedule task.</li> <li>test_get_schedule_tasks: Tests retrieving all schedule tasks.</li> <li>test_get_schedule_task: Tests retrieving a single schedule task by schedule ID and task ID.</li> <li>test_delete_schedule_task: Tests deleting a schedule task.</li> </ul>"},{"location":"tests/#test_authpy","title":"<code>test_auth.py</code>","text":"<p>This file contains tests for the authentication-related endpoints.</p> <ul> <li>test_register_user: Tests user registration.</li> <li>test_login_user: Tests user login.</li> <li>test_get_info_current_user: Tests retrieving information about the current user.</li> <li>test_reset_password_user: Tests resetting a user's password.</li> </ul>"},{"location":"tests/#test_notificationpy","title":"<code>test_notification.py</code>","text":"<p>This file contains tests for the notification-related endpoints.</p> <ul> <li>test_create_notification: Tests the creation of a new notification.</li> <li>test_get_notifications: Tests retrieving all notifications.</li> <li>test_get_notification: Tests retrieving a single notification by ID.</li> <li>test_update_notification: Tests updating an existing notification.</li> <li>test_delete_notification: Tests deleting a notification.</li> </ul>"},{"location":"tests/#test_prioritypy","title":"<code>test_priority.py</code>","text":"<p>This file contains tests for the priority-related endpoints.</p> <ul> <li>test_create_priority: Tests the creation of a new priority.</li> <li>test_get_priorities: Tests retrieving all priorities.</li> <li>test_get_priority: Tests retrieving a single priority by ID.</li> <li>test_update_priority: Tests updating an existing priority.</li> <li>test_delete_priority: Tests deleting a priority.</li> </ul>"},{"location":"tests/#test_schedulepy","title":"<code>test_schedule.py</code>","text":"<p>This file contains tests for the schedule-related endpoints.</p> <ul> <li>test_create_schedule: Tests the creation of a new schedule.</li> <li>test_get_schedules: Tests retrieving all schedules.</li> <li>test_get_schedule: Tests retrieving a single schedule by ID.</li> <li>test_update_schedule: Tests updating an existing schedule.</li> <li>test_delete_schedule: Tests deleting a schedule.</li> </ul>"},{"location":"tests/#test_userpy","title":"<code>test_user.py</code>","text":"<p>This file contains tests for the user-related endpoints.</p> <ul> <li>test_create_user: Tests the creation of a new user.</li> <li>test_get_users: Tests retrieving all users.</li> <li>test_get_user: Tests retrieving a single user by ID.</li> <li>test_update_user: Tests updating an existing user.</li> <li>test_delete_user: Tests deleting a user.</li> </ul>"},{"location":"tests/#test_time_entrypy","title":"<code>test_time_entry.py</code>","text":"<p>This file contains tests for the time entry-related endpoints.</p> <ul> <li>test_create_time_entry: Tests the creation of a new time entry.</li> <li>test_get_time_entries: Tests retrieving all time entries.</li> <li>test_get_time_entry: Tests retrieving a single time entry by ID.</li> <li>test_update_time_entry: Tests updating an existing time entry.</li> <li>test_delete_time_entry: Tests deleting a time entry.</li> </ul>"},{"location":"api/generic/","title":"generic.py","text":"<p>The <code>generic.py</code> file contains generic functions for performing CRUD (Create, Read, Update, Delete) operations on database objects. These functions are designed to work with SQLModel and FastAPI to provide a flexible and reusable way to interact with different models in the database.</p>"},{"location":"api/generic/#functions","title":"Functions","text":"<ul> <li><code>create_object(session: Session, input_model: InputModel, output_model: Type[OutputModel]) -&gt; Response[OutputModel]</code></li> <li> <p>Creates a new object in the database.</p> </li> <li> <p><code>read_object_list(session: Session, output_model: Type[OutputModel]) -&gt; list[OutputModel]</code></p> </li> <li> <p>Retrieves a list of all objects from the database.</p> </li> <li> <p><code>read_object(session: Session, id: int, output_model: Type[OutputModel]) -&gt; OutputModel</code></p> </li> <li> <p>Retrieves a single object by its ID from the database.</p> </li> <li> <p><code>update_object(session: Session, id: int, input_model: InputModel, output_model: Type[OutputModel]) -&gt; InputModel</code></p> </li> <li> <p>Updates an existing object in the database by its ID.</p> </li> <li> <p><code>delete_object(session: Session, id: int, output_model: Type[OutputModel]) -&gt; dict</code></p> </li> <li>Deletes an object by its ID from the database.</li> </ul>"},{"location":"api/generic/#classes","title":"Classes","text":"<ul> <li><code>Response(TypedDict, Generic[OutputModel])</code></li> <li>A generic response class used to standardize API responses.</li> </ul>"},{"location":"api/generic/#code","title":"Code","text":"<pre><code>from typing import Generic, Type, TypedDict\nfrom fastapi import HTTPException\nfrom sqlmodel import Session, select\n\nfrom models.default import InputModel, OutputModel\n\nclass Response(TypedDict, Generic[OutputModel]):\n    status: int\n    data: OutputModel\n\ndef create_object(session: Session, input_model: InputModel, output_model: Type[OutputModel]) -&gt; Response[OutputModel]:\n    output_instance = output_model.model_validate(input_model)\n    session.add(output_instance)\n    session.commit()\n    session.refresh(output_instance)\n    return {\"status\": 201, \"data\": output_instance}\n\ndef read_object_list(session: Session, output_model: Type[OutputModel]) -&gt; list[OutputModel]:\n    return session.exec(select(output_model)).all()\n\ndef read_object(session: Session, id: int, output_model: Type[OutputModel]) -&gt; OutputModel:\n    output_instance = session.get(output_model, id)\n    if not output_instance:\n        raise HTTPException(status_code=404, detail=f\"{output_model.__name__} not found\")\n    return output_instance\n\ndef update_object(session: Session, id: int, input_model: InputModel, output_model: Type[OutputModel]) -&gt; InputModel:\n    output_instance = session.get(output_model, id)\n    if not output_instance:\n        raise HTTPException(status_code=404, detail=f\"{output_model.__name__} not found\")\n    output_data = input_model.model_dump(exclude_unset=True)\n    for key, value in output_data.items():\n        setattr(output_instance, key, value)\n    session.add(output_instance)\n    session.commit()\n    session.refresh(output_instance)\n    return output_instance\n\ndef delete_object(session: Session, id: int, output_model: Type[OutputModel]) -&gt; dict:\n    output_instance = session.get(output_model, id)\n    if not output_instance:\n        raise HTTPException(status_code=404, detail=f\"{output_model.__name__} not found\")\n    session.delete(output_instance)\n    session.commit()\n    return {\"ok\": True}\n</code></pre>"},{"location":"api/notifications/","title":"Notifications API","text":""},{"location":"api/notifications/#endpoints","title":"Endpoints","text":""},{"location":"api/notifications/#create-notification","title":"Create Notification","text":"<p>Create a new notification.</p> <p>URL : <code>/notifications</code></p> <p>Method : <code>POST</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>NotificationDefault</code>: Object containing notification details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"task_id\": 1,\n  \"message\": \"Task reminder\",\n  \"sent_at\": \"2023-10-01T12:00:00Z\"\n}\n</code></pre>"},{"location":"api/notifications/#success-responses","title":"Success Responses","text":"<p>Code : <code>201 Created</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"status\": 201,\n  \"data\": {\n    \"id\": 1,\n    \"task_id\": 1,\n    \"message\": \"Task reminder\",\n    \"sent_at\": \"2023-10-01T12:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/notifications/#get-notifications","title":"Get Notifications","text":"<p>Retrieve a list of all notifications.</p> <p>URL : <code>/notifications</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/notifications/#success-responses_1","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{[]}</code></p> <pre><code>[\n  {\n    \"id\": 1,\n    \"task_id\": 1,\n    \"message\": \"Task reminder\",\n    \"sent_at\": \"2023-10-01T12:00:00Z\"\n  },\n  {\n    \"id\": 2,\n    \"task_id\": 2,\n    \"message\": \"Meeting reminder\",\n    \"sent_at\": \"2023-10-02T12:00:00Z\"\n  }\n]\n</code></pre>"},{"location":"api/notifications/#get-notification","title":"Get Notification","text":"<p>Retrieve a notification by ID.</p> <p>URL : <code>/notifications/{notification_id}</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/notifications/#success-responses_2","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"task_id\": 1,\n  \"message\": \"Task reminder\",\n  \"sent_at\": \"2023-10-01T12:00:00Z\"\n}\n</code></pre>"},{"location":"api/notifications/#update-notification","title":"Update Notification","text":"<p>Update a notification by ID.</p> <p>URL : <code>/notifications/{notification_id}</code></p> <p>Method : <code>PATCH</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>NotificationDefault</code>: Object containing updated notification details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"message\": \"Updated task reminder\",\n  \"sent_at\": \"2023-10-01T13:00:00Z\"\n}\n</code></pre>"},{"location":"api/notifications/#success-responses_3","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"task_id\": 1,\n  \"message\": \"Updated task reminder\",\n  \"sent_at\": \"2023-10-01T13:00:00Z\"\n}\n</code></pre>"},{"location":"api/notifications/#delete-notification","title":"Delete Notification","text":"<p>Delete a notification by ID.</p> <p>URL : <code>/notifications/{notification_id}</code></p> <p>Method : <code>DELETE</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/notifications/#success-responses_4","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"ok\": true\n}\n</code></pre>"},{"location":"api/priorities/","title":"Priorities API","text":""},{"location":"api/priorities/#endpoints","title":"Endpoints","text":""},{"location":"api/priorities/#create-priority","title":"Create Priority","text":"<p>Create a new priority.</p> <p>URL : <code>/priorities</code></p> <p>Method : <code>POST</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>PriorityDefault</code>: Object containing priority details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"name\": \"High\"\n}\n</code></pre>"},{"location":"api/priorities/#success-responses","title":"Success Responses","text":"<p>Code : <code>201 Created</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"status\": 201,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"High\"\n  }\n}\n</code></pre>"},{"location":"api/priorities/#get-priorities","title":"Get Priorities","text":"<p>Retrieve a list of all priorities.</p> <p>URL : <code>/priorities</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/priorities/#success-responses_1","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{[]}</code></p> <pre><code>[\n  {\n    \"id\": 1,\n    \"name\": \"High\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Medium\"\n  }\n]\n</code></pre>"},{"location":"api/priorities/#get-priority","title":"Get Priority","text":"<p>Retrieve a priority by ID.</p> <p>URL : <code>/priorities/{priority_id}</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/priorities/#success-responses_2","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"name\": \"High\"\n}\n</code></pre>"},{"location":"api/priorities/#update-priority","title":"Update Priority","text":"<p>Update a priority by ID.</p> <p>URL : <code>/priorities/{priority_id}</code></p> <p>Method : <code>PATCH</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>PriorityDefault</code>: Object containing updated priority details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"name\": \"High Updated\"\n}\n</code></pre>"},{"location":"api/priorities/#success-responses_3","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"name\": \"High Updated\"\n}\n</code></pre>"},{"location":"api/priorities/#delete-priority","title":"Delete Priority","text":"<p>Delete a priority by ID.</p> <p>URL : <code>/priorities/{priority_id}</code></p> <p>Method : <code>DELETE</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/priorities/#success-responses_4","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"ok\": true\n}\n</code></pre>"},{"location":"api/schedule_tasks/","title":"Schedule Tasks API","text":""},{"location":"api/schedule_tasks/#endpoints","title":"Endpoints","text":""},{"location":"api/schedule_tasks/#create-schedule-task","title":"Create Schedule Task","text":"<p>Create a new schedule task.</p> <p>URL : <code>/schedule_tasks/{schedule_id}/{task_id}</code></p> <p>Method : <code>POST</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/schedule_tasks/#success-responses","title":"Success Responses","text":"<p>Code : <code>201 Created</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"status\": 201,\n  \"data\": {\n    \"schedule_id\": 1,\n    \"task_id\": 1,\n    \"added_at\": \"2023-10-01T12:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/schedule_tasks/#get-schedule-tasks","title":"Get Schedule Tasks","text":"<p>Retrieve a list of all schedule tasks.</p> <p>URL : <code>/schedule_tasks</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/schedule_tasks/#success-responses_1","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{[]}</code></p> <pre><code>[\n  {\n    \"schedule_id\": 1,\n    \"task_id\": 1,\n    \"added_at\": \"2023-10-01T12:00:00Z\"\n  },\n  {\n    \"schedule_id\": 2,\n    \"task_id\": 2,\n    \"added_at\": \"2023-10-02T12:00:00Z\"\n  }\n]\n</code></pre>"},{"location":"api/schedule_tasks/#get-schedule-task","title":"Get Schedule Task","text":"<p>Retrieve a schedule task by schedule ID and task ID.</p> <p>URL : <code>/schedule_tasks/{schedule_id}/{task_id}</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/schedule_tasks/#success-responses_2","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"schedule_id\": 1,\n  \"task_id\": 1,\n  \"added_at\": \"2023-10-01T12:00:00Z\"\n}\n</code></pre>"},{"location":"api/schedule_tasks/#delete-schedule-task","title":"Delete Schedule Task","text":"<p>Delete a schedule task by schedule ID and task ID.</p> <p>URL : <code>/schedule_tasks/{schedule_id}/{task_id}</code></p> <p>Method : <code>DELETE</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/schedule_tasks/#success-responses_3","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"ok\": true\n}\n</code></pre>"},{"location":"api/schedules/","title":"Schedules API","text":""},{"location":"api/schedules/#endpoints","title":"Endpoints","text":""},{"location":"api/schedules/#create-schedule","title":"Create Schedule","text":"<p>Create a new schedule.</p> <p>URL : <code>/schedules</code></p> <p>Method : <code>POST</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>ScheduleDefault</code>: Object containing schedule details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"user_id\": 1,\n  \"date\": \"2023-10-01T00:00:00\"\n}\n</code></pre>"},{"location":"api/schedules/#success-responses","title":"Success Responses","text":"<p>Code : <code>201 Created</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"status\": 201,\n  \"data\": {\n    \"id\": 1,\n    \"user_id\": 1,\n    \"date\": \"2023-10-01T00:00:00\"\n  }\n}\n</code></pre>"},{"location":"api/schedules/#get-schedules","title":"Get Schedules","text":"<p>Retrieve a list of all schedules.</p> <p>URL : <code>/schedules</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/schedules/#success-responses_1","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{[]}</code></p> <pre><code>[\n  {\n    \"id\": 1,\n    \"user_id\": 1,\n    \"date\": \"2023-10-01T00:00:00\"\n  },\n  {\n    \"id\": 2,\n    \"user_id\": 2,\n    \"date\": \"2023-10-02T00:00:00\"\n  }\n]\n</code></pre>"},{"location":"api/schedules/#get-schedule","title":"Get Schedule","text":"<p>Retrieve a schedule by ID.</p> <p>URL : <code>/schedules/{schedule_id}</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/schedules/#success-responses_2","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"user_id\": 1,\n  \"date\": \"2023-10-01T00:00:00\"\n}\n</code></pre>"},{"location":"api/schedules/#update-schedule","title":"Update Schedule","text":"<p>Update a schedule by ID.</p> <p>URL : <code>/schedules/{schedule_id}</code></p> <p>Method : <code>PATCH</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>ScheduleDefault</code>: Object containing updated schedule details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"user_id\": 1,\n  \"date\": \"2023-10-01T00:00:00\"\n}\n</code></pre>"},{"location":"api/schedules/#success-responses_3","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"user_id\": 1,\n  \"date\": \"2023-10-01T00:00:00\"\n}\n</code></pre>"},{"location":"api/schedules/#delete-schedule","title":"Delete Schedule","text":"<p>Delete a schedule by ID.</p> <p>URL : <code>/schedules/{schedule_id}</code></p> <p>Method : <code>DELETE</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/schedules/#success-responses_4","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"ok\": true\n}\n</code></pre>"},{"location":"api/tasks/","title":"Tasks API","text":""},{"location":"api/tasks/#endpoints","title":"Endpoints","text":""},{"location":"api/tasks/#create-task","title":"Create Task","text":"<p>Create a new task.</p> <p>URL : <code>/tasks</code></p> <p>Method : <code>POST</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>TaskDefault</code>: Object containing task details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"description\": \"Complete project\",\n  \"deadline\": \"2023-12-31T23:59:59\",\n  \"priority_id\": 1,\n  \"user_id\": 1\n}\n</code></pre>"},{"location":"api/tasks/#success-responses","title":"Success Responses","text":"<p>Code : <code>201 Created</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"status\": 201,\n  \"data\": {\n    \"id\": 1,\n    \"description\": \"Complete project\",\n    \"deadline\": \"2023-12-31T23:59:59\",\n    \"priority_id\": 1,\n    \"user_id\": 1\n  }\n}\n</code></pre>"},{"location":"api/tasks/#get-tasks","title":"Get Tasks","text":"<p>Retrieve a list of all tasks.</p> <p>URL : <code>/tasks</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/tasks/#success-responses_1","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{[]}</code></p> <pre><code>[\n  {\n    \"id\": 1,\n    \"description\": \"Complete project\",\n    \"deadline\": \"2023-12-31T23:59:59\",\n    \"priority_id\": 1,\n    \"user_id\": 1\n  },\n  {\n    \"id\": 2,\n    \"description\": \"Prepare presentation\",\n    \"deadline\": \"2023-11-30T23:59:59\",\n    \"priority_id\": 2,\n    \"user_id\": 2\n  }\n]\n</code></pre>"},{"location":"api/tasks/#get-task","title":"Get Task","text":"<p>Retrieve a task by ID.</p> <p>URL : <code>/tasks/{task_id}</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/tasks/#success-responses_2","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"description\": \"Complete project\",\n  \"deadline\": \"2023-12-31T23:59:59\",\n  \"priority_id\": 1,\n  \"user_id\": 1\n}\n</code></pre>"},{"location":"api/tasks/#update-task","title":"Update Task","text":"<p>Update a task by ID.</p> <p>URL : <code>/tasks/{task_id}</code></p> <p>Method : <code>PATCH</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>TaskDefault</code>: Object containing updated task details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"description\": \"Complete project updated\",\n  \"deadline\": \"2023-12-31T23:59:59\",\n  \"priority_id\": 1,\n  \"user_id\": 1\n}\n</code></pre>"},{"location":"api/tasks/#success-responses_3","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"description\": \"Complete project updated\",\n  \"deadline\": \"2023-12-31T23:59:59\",\n  \"priority_id\": 1,\n  \"user_id\": 1\n}\n</code></pre>"},{"location":"api/tasks/#delete-task","title":"Delete Task","text":"<p>Delete a task by ID.</p> <p>URL : <code>/tasks/{task_id}</code></p> <p>Method : <code>DELETE</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/tasks/#success-responses_4","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"ok\": true\n}\n</code></pre>"},{"location":"api/time_entries/","title":"Time Entries API","text":""},{"location":"api/time_entries/#endpoints","title":"Endpoints","text":""},{"location":"api/time_entries/#create-time-entry","title":"Create Time Entry","text":"<p>Create a new time entry.</p> <p>URL : <code>/time_entries</code></p> <p>Method : <code>POST</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>TimeEntryDefault</code>: Object containing time entry details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"task_id\": 1,\n  \"start_time\": \"2023-10-01T09:00:00\",\n  \"end_time\": \"2023-10-01T17:00:00\",\n  \"duration\": 480\n}\n</code></pre>"},{"location":"api/time_entries/#success-responses","title":"Success Responses","text":"<p>Code : <code>201 Created</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"status\": 201,\n  \"data\": {\n    \"id\": 1,\n    \"task_id\": 1,\n    \"start_time\": \"2023-10-01T09:00:00\",\n    \"end_time\": \"2023-10-01T17:00:00\",\n    \"duration\": 480\n  }\n}\n</code></pre>"},{"location":"api/time_entries/#get-time-entries","title":"Get Time Entries","text":"<p>Retrieve a list of all time entries.</p> <p>URL : <code>/time_entries</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/time_entries/#success-responses_1","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{[]}</code></p> <pre><code>[\n  {\n    \"id\": 1,\n    \"task_id\": 1,\n    \"start_time\": \"2023-10-01T09:00:00\",\n    \"end_time\": \"2023-10-01T17:00:00\",\n    \"duration\": 480\n  },\n  {\n    \"id\": 2,\n    \"task_id\": 2,\n    \"start_time\": \"2023-10-02T09:00:00\",\n    \"end_time\": \"2023-10-02T17:00:00\",\n    \"duration\": 480\n  }\n]\n</code></pre>"},{"location":"api/time_entries/#get-time-entry","title":"Get Time Entry","text":"<p>Retrieve a time entry by ID.</p> <p>URL : <code>/time_entries/{time_entry_id}</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/time_entries/#success-responses_2","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"task_id\": 1,\n  \"start_time\": \"2023-10-01T09:00:00\",\n  \"end_time\": \"2023-10-01T17:00:00\",\n  \"duration\": 480\n}\n</code></pre>"},{"location":"api/time_entries/#update-time-entry","title":"Update Time Entry","text":"<p>Update a time entry by ID.</p> <p>URL : <code>/time_entries/{time_entry_id}</code></p> <p>Method : <code>PATCH</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>TimeEntryDefault</code>: Object containing updated time entry details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"task_id\": 1,\n  \"start_time\": \"2023-10-01T09:00:00\",\n  \"end_time\": \"2023-10-01T17:00:00\",\n  \"duration\": 480\n}\n</code></pre>"},{"location":"api/time_entries/#success-responses_3","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"task_id\": 1,\n  \"start_time\": \"2023-10-01T09:00:00\",\n  \"end_time\": \"2023-10-01T17:00:00\",\n  \"duration\": 480\n}\n</code></pre>"},{"location":"api/time_entries/#delete-time-entry","title":"Delete Time Entry","text":"<p>Delete a time entry by ID.</p> <p>URL : <code>/time_entries/{time_entry_id}</code></p> <p>Method : <code>DELETE</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/time_entries/#success-responses_4","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"ok\": true\n}\n</code></pre>"},{"location":"api/users/","title":"Users API","text":""},{"location":"api/users/#endpoints","title":"Endpoints","text":"<ul> <li>Me API</li> </ul>"},{"location":"api/users/#create-user","title":"Create User","text":"<p>Create a new user.</p> <p>URL : <code>/users</code></p> <p>Method : <code>POST</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>UserDefault</code>: Object containing user details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"username\": \"john_doe\",\n  \"email\": \"john@example.com\"\n}\n</code></pre>"},{"location":"api/users/#success-responses","title":"Success Responses","text":"<p>Code : <code>201 Created</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"status\": 201,\n  \"data\": {\n    \"id\": 1,\n    \"username\": \"john_doe\",\n    \"email\": \"john@example.com\"\n  }\n}\n</code></pre>"},{"location":"api/users/#get-users","title":"Get Users","text":"<p>Retrieve a list of all users.</p> <p>URL : <code>/users</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/users/#success-responses_1","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{[]}</code></p> <pre><code>[\n  {\n    \"id\": 1,\n    \"username\": \"john_doe\",\n    \"email\": \"john@example.com\"\n  },\n  {\n    \"id\": 2,\n    \"username\": \"jane_doe\",\n    \"email\": \"jane@example.com\"\n  }\n]\n</code></pre>"},{"location":"api/users/#get-user","title":"Get User","text":"<p>Retrieve a user by ID.</p> <p>URL : <code>/users/{user_id}</code></p> <p>Method : <code>GET</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/users/#success-responses_2","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"username\": \"john_doe\",\n  \"email\": \"john@example.com\"\n}\n</code></pre>"},{"location":"api/users/#update-user","title":"Update User","text":"<p>Update a user by ID.</p> <p>URL : <code>/users/{user_id}</code></p> <p>Method : <code>PATCH</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>UserDefault</code>: Object containing updated user details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"username\": \"john_doe_updated\",\n  \"email\": \"john_updated@example.com\"\n}\n</code></pre>"},{"location":"api/users/#success-responses_3","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"id\": 1,\n  \"username\": \"john_doe_updated\",\n  \"email\": \"john_updated@example.com\"\n}\n</code></pre>"},{"location":"api/users/#delete-user","title":"Delete User","text":"<p>Delete a user by ID.</p> <p>URL : <code>/users/{user_id}</code></p> <p>Method : <code>DELETE</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/users/#success-responses_4","title":"Success Responses","text":"<p>Code : <code>200 OK</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"ok\": true\n}\n</code></pre>"},{"location":"api/users/me/","title":"Me API","text":""},{"location":"api/users/me/#endpoints","title":"Endpoints","text":""},{"location":"api/users/me/#register-user","title":"Register User","text":"<p>Register a new user.</p> <p>URL : <code>/users/me/register</code></p> <p>Method : <code>POST</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>UserCreate</code>: Object containing user creation details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"first_name\": \"john\",\n  \"last_name\": \"doe\",\n  \"username\": \"john_doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"securepassword\"\n}\n</code></pre>"},{"location":"api/users/me/#success-responses","title":"Success Responses","text":"<p>Code : <code>201 Created</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"status\": 201,\n  \"data\": {\n    \"id\": 1,\n    \"first_name\": \"john\",\n    \"last_name\": \"doe\",\n    \"username\": \"john_doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"securepassword\",\n    \"access_token\": null\n  }\n}\n</code></pre>"},{"location":"api/users/me/#login-user","title":"Login User","text":"<p>Login user.</p> <p>URL : <code>/users/me/login</code></p> <p>Method : <code>POST</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>UserLogin</code>: Object containing user login details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"username\": \"john_doe\",\n  \"password\": \"securepassword\"\n}\n</code></pre>"},{"location":"api/users/me/#success-responses_1","title":"Success Responses","text":"<p>Code : <code>201 Created</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"status\": 201,\n  \"data\": {\n    \"id\": 1,\n    \"first_name\": \"john\",\n    \"last_name\": \"doe\",\n    \"username\": \"john_doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"securepassword\",\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhYm9iYSIsImV4cCI6MTc0MzI0ODU5MSwicmVmcmVzaCI6ZmFsc2V9.WuvI0wNefcyGajtcXAkBvKoUQdfipg4QYNmyYI4ax88\"\n  }\n}\n</code></pre>"},{"location":"api/users/me/#password-user","title":"Password User","text":"<p>Reset password for user.</p> <p>URL : <code>/users/me/password</code></p> <p>Method : <code>POST</code></p> <p>Auth required : NO</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p> <p>Request Body:</p> <ul> <li><code>UserLogin</code>: Object containing user login details.</li> </ul> <p>Request Example:</p> <pre><code>{\n  \"username\": \"john_doe\",\n  \"password\": \"newsecurepassword\"\n}\n</code></pre>"},{"location":"api/users/me/#success-responses_2","title":"Success Responses","text":"<p>Code : <code>201 Created</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"status\": 201,\n  \"data\": {\n    \"id\": 1,\n    \"first_name\": \"john\",\n    \"last_name\": \"doe\",\n    \"username\": \"john_doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"securepassword\",\n    \"access_token\": null\n  }\n}\n</code></pre>"},{"location":"api/users/me/#current-user","title":"Current User","text":"<p>Reset password for user.</p> <p>URL : <code>/users/me/</code></p> <p>Method : <code>GET</code></p> <p>Auth required : YES</p> <p>Permissions required : None</p> <p>Data constraints : <code>{}</code></p>"},{"location":"api/users/me/#success-responses_3","title":"Success Responses","text":"<p>Code : <code>200 Ok</code></p> <p>Content : <code>{}</code></p> <pre><code>{\n  \"status\": 200,\n  \"data\": {\n    \"id\": 1,\n    \"first_name\": \"john\",\n    \"last_name\": \"doe\",\n    \"username\": \"john_doe\",\n    \"email\": \"john@example.com\"\n  }\n}\n</code></pre>"},{"location":"db/database_connection/","title":"Connection to database","text":"<p>Database connection is established using SQLModel and SQLAlchemy. The connection is configured using environment variables.</p>"},{"location":"db/database_connection/#connectionpy","title":"connection.py","text":"<pre><code>from sqlmodel import SQLModel, Session, create_engine\nfrom models.models import User, Priority, Task, ScheduleTask, TimeEntry, Schedule, Notification\nimport os\nfrom dotenv import load_dotenv\n\nload_dotenv()\ndb_url = os.getenv('DB_ADMIN')\nengine = create_engine(db_url, echo=True)\n\ndef init_db():\n    SQLModel.metadata.create_all(engine)\n\ndef get_session():\n    with Session(engine) as session:\n        yield session\n</code></pre>"},{"location":"db/database_schema/","title":"Database Schema","text":""},{"location":"db/database_schema/#user","title":"User","text":"<ul> <li><code>id</code>: Integer, Primary Key</li> <li><code>first_name</code>: String</li> <li><code>last_name</code>: String</li> <li><code>username</code>: String</li> <li><code>email</code>: String</li> <li><code>password_hash</code>: String</li> </ul>"},{"location":"db/database_schema/#priority","title":"Priority","text":"<ul> <li><code>id</code>: Integer, Primary Key</li> <li><code>name</code>: String</li> </ul>"},{"location":"db/database_schema/#task","title":"Task","text":"<ul> <li><code>id</code>: Integer, Primary Key</li> <li><code>description</code>: String</li> <li><code>deadline</code>: DateTime</li> <li><code>priority_id</code>: Integer, Foreign Key</li> <li><code>user_id</code>: Integer, Foreign Key</li> </ul>"},{"location":"db/database_schema/#schedule","title":"Schedule","text":"<ul> <li><code>id</code>: Integer, Primary Key</li> <li><code>user_id</code>: Integer, Foreign Key</li> <li><code>date</code>: DateTime</li> </ul>"},{"location":"db/database_schema/#scheduletask","title":"ScheduleTask","text":"<ul> <li><code>schedule_id</code>: Integer, Foreign Key, Primary Key</li> <li><code>task_id</code>: Integer, Foreign Key, Primary Key</li> <li><code>added_at</code>: DateTime</li> </ul>"},{"location":"db/database_schema/#timeentry","title":"TimeEntry","text":"<ul> <li><code>id</code>: Integer, Primary Key</li> <li><code>task_id</code>: Integer, Foreign Key</li> <li><code>start_time</code>: DateTime</li> <li><code>end_time</code>: DateTime</li> <li><code>duration</code>: Integer</li> </ul>"},{"location":"db/database_schema/#notification","title":"Notification","text":"<ul> <li><code>id</code>: Integer, Primary Key</li> <li><code>task_id</code>: Integer, Foreign Key</li> <li><code>message</code>: String</li> <li><code>sent_at</code>: DateTime</li> </ul>"}]}